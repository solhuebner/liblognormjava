/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sh.tools.liblognormjava;

public class data_Repeat {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected data_Repeat(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(data_Repeat obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liblognormJNI.delete_data_Repeat(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setParser(SWIGTYPE_p_ln_pdag value) {
    liblognormJNI.data_Repeat_parser_set(swigCPtr, this, SWIGTYPE_p_ln_pdag.getCPtr(value));
  }

  public SWIGTYPE_p_ln_pdag getParser() {
    long cPtr = liblognormJNI.data_Repeat_parser_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ln_pdag(cPtr, false);
  }

  public void setWhile_cond(SWIGTYPE_p_ln_pdag value) {
    liblognormJNI.data_Repeat_while_cond_set(swigCPtr, this, SWIGTYPE_p_ln_pdag.getCPtr(value));
  }

  public SWIGTYPE_p_ln_pdag getWhile_cond() {
    long cPtr = liblognormJNI.data_Repeat_while_cond_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ln_pdag(cPtr, false);
  }

  public void setPermitMismatchInParser(int value) {
    liblognormJNI.data_Repeat_permitMismatchInParser_set(swigCPtr, this, value);
  }

  public int getPermitMismatchInParser() {
    return liblognormJNI.data_Repeat_permitMismatchInParser_get(swigCPtr, this);
  }

  public data_Repeat() {
    this(liblognormJNI.new_data_Repeat(), true);
  }

}
